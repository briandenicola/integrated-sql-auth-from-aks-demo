apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqldemo
  namespace: {{ .Values.NAMESPACE }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqldemo
  template:
    metadata:
      labels:
        app: sqldemo
        aadpodidbinding: {{ .Values.MSI_SELECTOR }} 
    spec:
      initContainers:
      - name: init-kerberos
        image:  {{ print .Values.ACR_NAME "/sql/demoapp-sidecar:" .Values.COMMIT_VERSION }}
        env:
        - name: APP_KEYTAB
          value: {{ .Values.APP_KEYTAB }} 
        - name: APP_SPN
          value: {{ .Values.APP_SPN }} 
        - name: POD_TYPE
          value: "INIT"
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/etc/keytabs"
          readOnly: true
        volumeMounts:
        - name: kinit-cache
          mountPath: /tmp
      containers:
      - name: demoapp
        image:  {{ print .Values.ACR_NAME "/sql/demoapp:" .Values.COMMIT_VERSION }} 
        imagePullPolicy: Always
        env:
        - name: SQL_CON_STR
          value: {{ .Values.CONNECTION_STRING }}
        volumeMounts:
        - name: kinit-cache
          mountPath: /tmp
      - name: demoapp-sidecar
        image:  {{ print .Values.ACR_NAME "/sql/demoapp-sidecar:" .Values.COMMIT_VERSION }} 
        imagePullPolicy: Always
        env:
        - name: APP_KEYTAB
          value: {{ .Values.APP_KEYTAB }} 
        - name: APP_SPN
          value: {{ .Values.APP_SPN }}  
        - name: POD_TYPE
          value: "SIDECAR"       
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/etc/keytabs"
          readOnly: true
        - name: kinit-cache
          mountPath: /tmp
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "keytab"
        - name: kinit-cache
          emptyDir: {}